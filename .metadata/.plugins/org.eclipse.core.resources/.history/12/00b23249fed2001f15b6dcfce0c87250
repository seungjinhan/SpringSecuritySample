package com.example.demo.config;

import static org.springframework.security.config.Customizer.withDefaults;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class ProjectSecurityConfig {

	@Bean
	SecurityFilterChain defaultSecurityFilterChain(HttpSecurity http) throws Exception {

//		http.authorizeHttpRequests((req) -> req.anyRequest().permitAll());
//		http.authorizeHttpRequests((req) -> req.anyRequest().denyAll());

		http.authorizeHttpRequests((req) -> req.requestMatchers("/myAccount", "/myBalance", "/myLoans", "/myCards")
				.authenticated().requestMatchers("/welcome", "/notices", "contact", "/error").permitAll());

		http.formLogin(withDefaults());
		http.httpBasic(withDefaults());

//		http.formLogin(flc -> flc.disable());
//		http.httpBasic(hbc -> hbc.disable());

		return http.build();
	}

	@Bean
	UserDetailsService userDetailService() {
		UserDetails user = User.withUsername("user").password("{noop}1234").authorities("read").build();
		UserDetails admin = User.withUsername("admin").password("{noop}1234").authorities("admin").build();
		return new InMemoryUserDetailsManager(user, admin);

	}
}
